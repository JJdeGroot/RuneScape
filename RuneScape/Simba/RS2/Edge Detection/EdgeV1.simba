program Edge;
{$DEFINE SMART}
{$i srl/srl.simba}
{$i srl/srl/misc/paintsmart.simba}

var
  Time: Integer;
  SearchBox: TBox;

procedure DeclarePlayers;
begin
  HowManyPlayers := 1;
  NumberOfPlayers(HowManyPlayers);
  CurrentPlayer := 0;

  with Players[0] do
    begin
      Name := '';
      Pass := '';
      Pin := '';
      Active := True;
    end;
end;

procedure SetupLogin;
begin
  ClearDebug;
  Smart_Server := 10;
  Smart_Members := False;
  Smart_Signed := True;
  Smart_SuperDetail := False;
  SetupSRL;
  DeclarePlayers;
  LoginPlayer;
end;

procedure DebugBox(InputBox: TBox);
var
  Width, Height, ClientBMP: Integer;
  Box: TBox;

begin
  Box := InputBox;
  Width := Box.X2-Box.X1;
  Height := Box.Y2-Box.Y1;
  DisplayDebugImgWindow(Width, Height);
  ClientBMP := BitmapFromClient(Box.X1, Box.Y1, Box.X2, Box.Y2);
  DrawBitmapDebugImg(ClientBMP);
  FreeBitmap(ClientBmp);
end;

procedure ColorsToHSL(Colors: TIntegerArray; var rHSL: T2DExtendedArray);
var
  i, h: Integer;

begin
  h := Length(Colors);
  SetLength(rHSL, h);
  Dec(h);
  for i := 0 to h do
    SetLength(rHSL[i], 3);
  Dec(h);
  for i := 0 to h do
    ColorToHSL(Colors[i], rHSL[i][0], rHSL[i][1], rHSL[i][2]);
end;

procedure Test;
var
  i: Integer;
  P: TPoint;
  Colors: TIntegerArray;
  rHSL: T2DExtendedArray;
  NotGray: TPointArray;

begin
  // Defining a searchbox where to search in
  SearchBox := IntToBox(300, 10, 340, 30);
  DebugBox(SearchBox);

  // Getting all the colors on the screen inside the box
  Colors := GetColors(TPAFromBox(SearchBox));
  WriteLn('Colors: '+ToStr(Colors)+'');

  Colors[0]

  // Converting the colors to HSL values
  ColorsToHSL(Colors, rHSL);
  WriteLn('HSL: '+ToStr(rHSL)+'');

  for i:=0 to high(rHSL) do
  if rHSL[i][0] > 1 then
    begin
      WriteLn('i: '+ToStr(i)+'');
      WriteLn('HSL: '+ToStr(rHSL[i][0])+'');
      if i > (SearchBox.X2-SearchBox.X1) then
        P.X := SearchBox.X1 + i - (Floor((i / (SearchBox.X2-SearchBox.X1))) * (SearchBox.X2-SearchBox.X1))
      else
        P.X := (300 + i);
      WriteLn('Point: '+ToStr(P)+'');
      Break;
    end;
end;

begin
  SetUpLogin;
  MarkTime(Time);
  Test;
  WriteLn('Took: '+IntToStr(TimeFromMark(Time))+' ms');
end.
